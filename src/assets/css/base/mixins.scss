// MIXINS
// ----------------------------------

@function pt($points) {
  @return #{$points*72/96}pt;
}

@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
}

@mixin transition($transition...) {
  transition: $transition;
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
}

@mixin transform($transforms) {
  transform: $transforms;
  -moz-transform: $transforms;
  -o-transform: $transforms;
  -ms-transform: $transforms;
  -webkit-transform: $transforms;
}

@mixin rotate($degrees) {
    @include transform(rotate(#{$degress}deg));
}

@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}

@mixin scale($factor) {
  @include transform(scale($factor));
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    box-shadow:inset $top $left $blur $color;
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
  } @else {
    box-shadow: $top $left $blur $color;
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
  }
}

@mixin background($background...) {
  background: -webkit-linear-gradient($background) fixed;
  background: -o-linear-gradient($background) fixed;
  background: -moz-linear-gradient($background) fixed;
  background: linear-gradient($background) fixed;
}

@mixin btn-color($color) {
  background-color: $color;
  &:hover {
    background-color: lighten($color, 10%);
  }
}
